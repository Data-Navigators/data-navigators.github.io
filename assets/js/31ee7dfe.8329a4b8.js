"use strict";(self.webpackChunkdata_dynamos_github_io=self.webpackChunkdata_dynamos_github_io||[]).push([[3239],{5680:(e,t,a)=>{a.d(t,{xA:()=>m,yg:()=>y});var n=a(6540);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),g=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},m=function(e){var t=g(e.components);return n.createElement(p.Provider,{value:t},e.children)},u="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),u=g(a),d=r,y=u["".concat(p,".").concat(d)]||u[d]||s[d]||l;return a?n.createElement(y,i(i({ref:t},m),{},{components:a})):n.createElement(y,i({ref:t},m))}));function y(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=d;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[u]="string"==typeof e?e:r,i[1]=o;for(var g=2;g<l;g++)i[g]=a[g];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},8964:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>s,frontMatter:()=>l,metadata:()=>o,toc:()=>g});var n=a(8168),r=(a(6540),a(5680));const l={sidebar_position:6},i="Exercise 3",o={unversionedId:"data-transformation/SQL/Exercise-3",id:"data-transformation/SQL/Exercise-3",title:"Exercise 3",description:"Create Table for Aggregate Global Temperatures",source:"@site/docs/data-transformation/SQL/Exercise-3.mdx",sourceDirName:"data-transformation/SQL",slug:"/data-transformation/SQL/Exercise-3",permalink:"/docs/data-transformation/SQL/Exercise-3",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/data-transformation/SQL/Exercise-3.mdx",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Exercise 2",permalink:"/docs/data-transformation/SQL/Exercise-2"},next:{title:"Exercise 4",permalink:"/docs/data-transformation/SQL/Exercise-4"}},p={},g=[{value:"Create Table for Aggregate Global Temperatures",id:"create-table-for-aggregate-global-temperatures",level:2}],m={toc:g},u="wrapper";function s(e){let{components:t,...a}=e;return(0,r.yg)(u,(0,n.A)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"exercise-3"},"Exercise 3"),(0,r.yg)("h2",{id:"create-table-for-aggregate-global-temperatures"},"Create Table for Aggregate Global Temperatures"),(0,r.yg)("p",null,"To analyze temperature measurements globally on an annual basis, you will create a table called ",(0,r.yg)("inlineCode",{parentName:"p"},"aggregate_global_temperatures")," in the ",(0,r.yg)("inlineCode",{parentName:"p"},"global_temperatures")," schema based on the ",(0,r.yg)("inlineCode",{parentName:"p"},"stg_global_temperatures")," table in the ",(0,r.yg)("inlineCode",{parentName:"p"},"global_temperatures")," schema . This view will group the data by year and provide aggregated temperature values using the appropriate aggregation functions."),(0,r.yg)("p",null,"To create the ",(0,r.yg)("inlineCode",{parentName:"p"},"aggregate_global_temperatures")," view based on the ",(0,r.yg)("inlineCode",{parentName:"p"},"stg_global_temperatures")," table in the ",(0,r.yg)("inlineCode",{parentName:"p"},"global_temperatures")," schema, and extract the desired columns while applying the appropriate aggregation functions, follow these steps:"),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},"Select the ",(0,r.yg)("inlineCode",{parentName:"li"},"Date"),", ",(0,r.yg)("inlineCode",{parentName:"li"},"LandAverageTemperature"),", ",(0,r.yg)("inlineCode",{parentName:"li"},"LandMaxTemperature"),", ",(0,r.yg)("inlineCode",{parentName:"li"},"LandMinTemperature"),", and ",(0,r.yg)("inlineCode",{parentName:"li"},"LandAndOceanAverageTemperature")," columns from the ",(0,r.yg)("inlineCode",{parentName:"li"},"stg_global_temperatures")," table."),(0,r.yg)("li",{parentName:"ol"},"Extract the year from the ",(0,r.yg)("inlineCode",{parentName:"li"},"Date")," column to obtain only the year portion of the date."),(0,r.yg)("li",{parentName:"ol"},"Apply the ",(0,r.yg)("inlineCode",{parentName:"li"},"AVG")," aggregation function to calculate the average values for ",(0,r.yg)("inlineCode",{parentName:"li"},"LANDANDOCEANAVERAGETEMPERATURE")," and ",(0,r.yg)("inlineCode",{parentName:"li"},"LANDAVERAGETEMPERATURE"),"."),(0,r.yg)("li",{parentName:"ol"},"Apply the ",(0,r.yg)("inlineCode",{parentName:"li"},"MAX")," aggregation function to calculate the maximum value for ",(0,r.yg)("inlineCode",{parentName:"li"},"LANDMAXTEMPERATURE"),"."),(0,r.yg)("li",{parentName:"ol"},"Apply the ",(0,r.yg)("inlineCode",{parentName:"li"},"MIN")," aggregation function to calculate the minimum value for ",(0,r.yg)("inlineCode",{parentName:"li"},"LANDMINTEMPERATURE"),"."),(0,r.yg)("li",{parentName:"ol"},"Group the data by the ",(0,r.yg)("inlineCode",{parentName:"li"},"YEAR")," column.")),(0,r.yg)("p",null,"This view will group the temperature data by year and provide the aggregated values for ",(0,r.yg)("inlineCode",{parentName:"p"},"LANDAVERAGETEMPERATURE"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"LANDMAXTEMPERATURE"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"LANDMINTEMPERATURE"),", and ",(0,r.yg)("inlineCode",{parentName:"p"},"LANDANDOCEANAVERAGETEMPERATURE"),"."),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"YEAR: Integer"),(0,r.yg)("li",{parentName:"ul"},"LANDAVERAGETEMPERATURE: Float"),(0,r.yg)("li",{parentName:"ul"},"LANDMAXTEMPERATURE: Float"),(0,r.yg)("li",{parentName:"ul"},"LANDMINTEMPERATURE: Float"),(0,r.yg)("li",{parentName:"ul"},"LANDANDOCEANAVERAGETEMPERATURE: Float")),(0,r.yg)("p",null,"Sample Output"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"YEAR"),(0,r.yg)("th",{parentName:"tr",align:null},"LANDAVERAGETEMPERATURE"),(0,r.yg)("th",{parentName:"tr",align:null},"LANDMAXTEMPERATURE"),(0,r.yg)("th",{parentName:"tr",align:null},"LANDMINTEMPERATURE"),(0,r.yg)("th",{parentName:"tr",align:null},"LANDANDOCEANAVERAGETEMPERATURE"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"1869"),(0,r.yg)("td",{parentName:"tr",align:null},"8.432083333"),(0,r.yg)("td",{parentName:"tr",align:null},"9.618"),(0,r.yg)("td",{parentName:"tr",align:null},"-0.509"),(0,r.yg)("td",{parentName:"tr",align:null},"15.0655")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"1866"),(0,r.yg)("td",{parentName:"tr",align:null},"8.292166667"),(0,r.yg)("td",{parentName:"tr",align:null},"9.636"),(0,r.yg)("td",{parentName:"tr",align:null},"-0.881"),(0,r.yg)("td",{parentName:"tr",align:null},"15.057")))),(0,r.yg)("admonition",{type:"note"},(0,r.yg)("p",{parentName:"admonition"},"Note date column as the value like 2022-01-19 try to extract 2022 alone"),(0,r.yg)("p",{parentName:"admonition"},"Both Year and Date are Reserved Keyword"),(0,r.yg)("p",{parentName:"admonition"},"In the SQL statement, the use of double quotes around the YEAR column name is necessary because it is a reserved keyword in Snowflake. "),(0,r.yg)("p",{parentName:"admonition"},(0,r.yg)("inlineCode",{parentName:"p"},'select "YEAR" FROM TABLE'))))}s.isMDXComponent=!0}}]);