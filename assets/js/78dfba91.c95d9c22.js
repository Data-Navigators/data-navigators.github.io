"use strict";(self.webpackChunkdata_dynamos_github_io=self.webpackChunkdata_dynamos_github_io||[]).push([[9897],{5680:(e,t,n)=>{n.d(t,{xA:()=>u,yg:()=>d});var r=n(6540);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},p="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(n),m=a,d=p["".concat(s,".").concat(m)]||p[m]||g[m]||i;return n?r.createElement(d,o(o({ref:t},u),{},{components:n})):r.createElement(d,o({ref:t},u))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9147:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>g,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var r=n(8168),a=(n(6540),n(5680));const i={sidebar_position:5},o="Exercise 2",l={unversionedId:"data-processing/SQL/Exercise-2",id:"data-processing/SQL/Exercise-2",title:"Exercise 2",description:"Create View for Aggregate Global Emissions",source:"@site/docs/data-processing/SQL/Exercise-2.mdx",sourceDirName:"data-processing/SQL",slug:"/data-processing/SQL/Exercise-2",permalink:"/docs/data-processing/SQL/Exercise-2",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/data-processing/SQL/Exercise-2.mdx",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Exercise 1",permalink:"/docs/data-processing/SQL/Exercise-1"},next:{title:"Exercise 3",permalink:"/docs/data-processing/SQL/Exercise-3"}},s={},c=[{value:"Create View for Aggregate Global Emissions",id:"create-view-for-aggregate-global-emissions",level:2},{value:"Your output view should contain:",id:"your-output-view-should-contain",level:2},{value:"Sample Output",id:"sample-output",level:2}],u={toc:c},p="wrapper";function g(e){let{components:t,...n}=e;return(0,a.yg)(p,(0,r.A)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"exercise-2"},"Exercise 2"),(0,a.yg)("h2",{id:"create-view-for-aggregate-global-emissions"},"Create View for Aggregate Global Emissions"),(0,a.yg)("p",null,"In this exercise, you will create a view called ",(0,a.yg)("inlineCode",{parentName:"p"},"aggregate_global_emissions")," in the ",(0,a.yg)("inlineCode",{parentName:"p"},"carbon_emissions")," schema. This view will aggregate the total CO2 emissions globally on an annual basis using the data from the ",(0,a.yg)("inlineCode",{parentName:"p"},"co2_emissions_by_country")," table."),(0,a.yg)("p",null,"To create the view with the desired columns:"),(0,a.yg)("ol",null,(0,a.yg)("li",{parentName:"ol"},"Select the ",(0,a.yg)("inlineCode",{parentName:"li"},"Year")," column from the ",(0,a.yg)("inlineCode",{parentName:"li"},"co2_emissions_by_country")," table."),(0,a.yg)("li",{parentName:"ol"},"Calculate the sum of ",(0,a.yg)("inlineCode",{parentName:"li"},"TotalEmissions")," for each year to obtain the total emissions globally."),(0,a.yg)("li",{parentName:"ol"},"Assign meaningful aliases to the columns to improve readability and maintain consistency with the desired output table structure."),(0,a.yg)("li",{parentName:"ol"},"Store the results in the ",(0,a.yg)("inlineCode",{parentName:"li"},"aggregate_global_emissions")," view within the ",(0,a.yg)("inlineCode",{parentName:"li"},"carbon_emissions")," schema.")),(0,a.yg)("h2",{id:"your-output-view-should-contain"},"Your output view should contain:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"YEAR: integer"),(0,a.yg)("li",{parentName:"ul"},"TOTALEMISSIONS:float")),(0,a.yg)("h2",{id:"sample-output"},"Sample Output"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"TOTALEMISSIONS"),(0,a.yg)("th",{parentName:"tr",align:null},"YEAR"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"74665.790947"),(0,a.yg)("td",{parentName:"tr",align:null},"1978")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"74492.606202"),(0,a.yg)("td",{parentName:"tr",align:null},"1983")))),(0,a.yg)("admonition",{type:"note"},(0,a.yg)("p",{parentName:"admonition"},"In the SQL statement, the use of double quotes around the YEAR column name is necessary because it is a reserved keyword in Snowflake. "),(0,a.yg)("p",{parentName:"admonition"},(0,a.yg)("inlineCode",{parentName:"p"},'select "YEAR" FROM TABLE'))))}g.isMDXComponent=!0}}]);